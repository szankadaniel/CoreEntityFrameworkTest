// <auto-generated />
using System;
using CoreEntityFrameworkTest.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CoreEntityFrameworkTest.DAL.Migrations
{
    [DbContext(typeof(CatalogContext))]
    partial class CatalogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CoreEntityFrameworkTest.DAL.CatalogBasket", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("CatalogBasket","dbo");
                });

            modelBuilder.Entity("CoreEntityFrameworkTest.DAL.CatalogBrand", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("CatalogBrand","dbo");
                });

            modelBuilder.Entity("CoreEntityFrameworkTest.DAL.CatalogItem", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CatalogBrandId")
                        .HasColumnType("integer");

                    b.Property<int?>("CatalogTypeID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CatalogBrandId");

                    b.HasIndex("CatalogTypeID");

                    b.ToTable("CatalogItem","dbo");
                });

            modelBuilder.Entity("CoreEntityFrameworkTest.DAL.CatalogType", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IsFree")
                        .HasColumnType("boolean");

                    b.HasKey("ID");

                    b.ToTable("CatalogType","dbo");
                });

            modelBuilder.Entity("CoreEntityFrameworkTest.DAL.NewTestTable", b =>
                {
                    b.Property<int?>("NewTestTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("TestEnum")
                        .HasColumnType("integer");

                    b.HasKey("NewTestTableId");

                    b.ToTable("NewTestTable","dbo");

                    b.HasData(
                        new
                        {
                            NewTestTableId = 1,
                            Code = "ASDF",
                            Name = "sdf",
                            TestEnum = 3
                        },
                        new
                        {
                            NewTestTableId = 2,
                            Code = "ASDF2",
                            Name = "sdf2",
                            TestEnum = 1
                        },
                        new
                        {
                            NewTestTableId = 3,
                            Code = "ASDF3",
                            Name = "sdf3",
                            TestEnum = 2
                        },
                        new
                        {
                            NewTestTableId = 4,
                            Code = "ASDF4",
                            Name = "sdf4",
                            TestEnum = 2
                        },
                        new
                        {
                            NewTestTableId = 5,
                            Code = "ASDF5",
                            Name = "sdf5",
                            TestEnum = 1
                        });
                });

            modelBuilder.Entity("CoreEntityFrameworkTest.DAL.Product", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CatalogBasketsID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CatalogBasketsID");

                    b.ToTable("Product","dbo");
                });

            modelBuilder.Entity("CoreEntityFrameworkTest.DAL.CatalogItem", b =>
                {
                    b.HasOne("CoreEntityFrameworkTest.DAL.CatalogBrand", "CatalogBrand")
                        .WithMany("Items")
                        .HasForeignKey("CatalogBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreEntityFrameworkTest.DAL.CatalogType", "CatalogType")
                        .WithMany()
                        .HasForeignKey("CatalogTypeID");
                });

            modelBuilder.Entity("CoreEntityFrameworkTest.DAL.Product", b =>
                {
                    b.HasOne("CoreEntityFrameworkTest.DAL.CatalogBasket", "CatalogBaskets")
                        .WithMany("Products")
                        .HasForeignKey("CatalogBasketsID");
                });
#pragma warning restore 612, 618
        }
    }
}
